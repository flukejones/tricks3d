<!--Header-->
<HTML>
<HEAD>
<TITLE>GPMega - Industry Section - Getting Started in the Games Industry</TITLE>
</HEAD>
<BODY BGCOLOR=#000000 TEXT=#FFFFFF LINK=#00FF00 VLINK=#00FF00 ALINK=#0000FF>
<!--End Header-->
<!--Advertiser-->
<CENTER>
<TABLE>
<TR>
<TD>
<A HREF="http://www.ugo.com/">
<IMG SRC="/GPMega/ugologo120.gif" BORDER=0 WIDTH=120 HEIGHT=60></A>
</TD>
<TD>
<IMG SRC="/GPMega/sponsored.gif" WIDTH=468 HEIGHT=10><br><br>
<SCRIPT LANGUAGE= "JavaScript">
<!--
var now = new Date();
var random_num = now.getSeconds();
document.write("<A HREF='http://www.ugo.net/RealMedia/ads/click_nx.cgi/www.perplexed.com/GPMega/industry/getstart.htm/" + random_num + "/@Top'>");
document.write("<IMG SRC='http://www.ugo.net/RealMedia/ads/adstream_nx.cgi/www.perplexed.com/GPMega/industry/getstart.htm/" + random_num + "/@Top' BORDER='0' WIDTH='468' HEIGHT='60'></A>");
//-->
</SCRIPT>
</TD>
</TR>
</TABLE>
</CENTER>
<!--End Advertiser-->
<!--Splitter-->
<BR>
<!--End Splitter-->
<!--Body-->
<FONT SIZE=2 FACE=Helvetica>
<STRONG>
<!--Top Navigation-->
<A NAME="top"></A>
<CENTER>
<TABLE WIDTH=75%>
   <TR VALIGN=MIDDLE>
   <TD ALIGN=LEFT>
      <IMG SRC="gradsplit2.jpg" WIDTH=100% HEIGHT=1><BR><BR>
      <A HREF="http://www.perplexed.com/GPMega/"><IMG SRC="logo.jpg" BORDER=0 ALT="Home" WIDTH=80 HEIGHT=47 ALIGN=CENTER></A>
      <FONT COLOR=#666666 FACE=HELVETICA SIZE=-1><I>
      This Article Is Taken From <A HREF="http://www.perplexed.com/GPMega/">The Game Programming MegaSite</A>, A Definitive Resource For Game Developers!
      </I></FONT><BR>
      <IMG SRC="gradsplit2.jpg" WIDTH=100% HEIGHT=1>
   </TD>
   </TR>
</TABLE>
</CENTER>
<BR><!--End Top Navigation-->
<!--Title-->
<H3 ALIGN=CENTER><font color="#FFF900">G</font><font color="#FFF300">e</font><font color="#FFED00">t</font><font color="#FFE700">t</font><font color="#FFE100">i</font><font color="#FFDB00">n</font><font color="#FFD500">g</font><font color="#FFCF00"> </font><font color="#FFC900">S</font><font color="#FFC300">t</font><font color="#FFBD00">a</font><font color="#FFB700">r</font><font color="#FFB100">t</font><font color="#FFAB00">e</font><font color="#FFA500">d</font><font color="#FF9F00"> </font><font color="#FF9900">i</font><font color="#FF9300">n</font><font color="#FF8D00"> </font><font color="#FF8700">t</font><font color="#FF8100">h</font><font color="#FF7B00">e</font><font color="#FF7500"> </font><font color="#FF6F00">G</font><font color="#FF6900">a</font><font color="#FF6300">m</font><font color="#FF5D00">e</font><font color="#FF5700">s</font><font color="#FF5100"> </font><font color="#FF4B00">I</font><font color="#FF4500">n</font><font color="#FF3F00">d</font><font color="#FF3900">u</font><font color="#FF3300">s</font><font color="#FF2D00">t</font><font color="#FF2700">r</font><font color="#FF2100">y</font><br><FONT SIZE=-2>By: <A HREF="mailto:ghowland@lupinegames.com">Geoff Howland</a></FONT></H3>
<!--End Title-->

<P>The game industry is an alluring business.  It has highly intellectual aspect as well as the fun of creating and playing games.  It also recently has taken on an air of fame as well since success stories such as iD Software have become the common dream for thousands of would-be game developers.  </P>

<P>How do you get into the industry and how do you make a game?  These are the questions we are going to tackle in this article.</P>

<H3><FONT COLOR=YELLOW><I>Where do I start?</FONT></I></H3>

<P>This is a question almost everyone asks at some point.  It's important that you have a plan of action, if you don't you will most likely not be able to get the results that you want because you will never finish.</P>

<H3><FONT COLOR=YELLOW><I>Goals</FONT></I></H3>

<P><I>"I want to get a job in the computer game industry."</I></P>

<P>A common answer to this question has always been to "Create a demo."  What exactly does this mean?  This means that you will create a program, or animation, or a set of music or sound effects that can pertain to video games and could practically be a part of a current video game.</P>

<P>For programmers this would take the guise of a 3D engine, or a 2D tile scrolling system (platform or overhead), or possibly tools for working on games such as map editors.  The closer you create these to actual production games or tools, the more of an impression on a potential employer.  If you create a small platform jumping game from start to finished with multiple levels, lives, scores, goals, beginning and ending sequences you have definitely shown that you understand how a video game basically works.  You have also proven that you have the initiative to make a project to show your potential employer and the willpower to stick to it.</P>

<P>The better a game you can produce the more likely you will be able to use it to help you get a job.  Just put yourself in your employer's position, hundreds of applicants are showing up asking to get a job in your company.  Won't the ones who show up with playable games they have created stand out the most?</P>

<I><P>"I just want to create games for fun."</P>
</I>
<P>You will always be fulfilled with this attitude since no one can stop you from doing it and you don't need any outside assistance.  A lot of groups have started freeware projects that you can join or create your own.  Working in teams especially long distance can be difficult so think about this before you decide to give it a try.</P>

<I><P>"I want to get a publisher so that I can afford to do this full time."</P>
</I>
<P>Unfortunately so do thousands of other people.  To do this your going to need to make something that stands out from everyone else and looks like its going to make money.  This requires that you create a working demo of your game.  You could create a video of it with an animation, this has worked for some people but it is less likely that you will be able to get funding this way since it is less tangible than a playable demo.  People that already have been in the business or developed games before are much more likely to have a video succeed for them.</P>

<P>How much of a demo do you need to build?  You need to have an equivalent of at least one level or one playable area for it to be a viable playable demo, the more you do however the more likely you will be received in the way you want.  You should have a concept of what the art is going to look like, and if you can't actually have it in place then have sketches for it.  If you don't have any sounds effects or music this probably will not hurt you since publishers routinely expect to put this in at the end and often have on-board sound crews that can do it for you.  This isn't the best way to create the sound for your game since it could end up having less effort put into it then, but it is one less thing to worry about for the demo.</P>

<P>There are two important things to remember in your demo that you will have to show.  If your game is going to be technically difficult then get as much of the technical things done in your demo as possible, this proves that you will be able to handle the job of completing the game and you haven’t bitten off more than you can chew.  The second thing to remember is the point of your game, if you can get the feel of how you want your game to play in your demo.  A demo with the feeling of a fun game has a lot more probability of drawing attention then one that plays lifelessly. </P>

<I><P>"I want more Ferraris than iD."</P>
</I>
<P>So does everyone else, and teams of dozens of people are working on this as hard as you can.  This is the Holy Grail of game developers recently, not the Ferrari's but the success of iD Software.  You have to keep in mind that iD did not start their careers with Doom, or even Wolfenstein 3D.  They worked on many smaller projects first, a lot of 2D games.  If your going to try to take on the big boys with your first title you need to realize just the amount of resources it can take to make a game that detailed.  You may want to set this aside for after you have completed at least several simple demo games for yourself, or even better a published simpler game.</P>

<H3><FONT COLOR=YELLOW><I>How do I do it?</FONT></I></H3>

<P>If you are trying to develop a game by yourself and have no idea where to start the best suggestion for you is that you are going to have to learn a lot first.  So put away the idea for the game and learn how to program or do whatever it is you want to do in the games business.</P>

<P>To be harshly realistic in this industry you need to learn C++, and your best bet for a compiler is Microsoft's Visual C++.  You can create games on your own with Visual Basic or Delphi but when you decide you want someone to pay you to write games for them then you had better know C++.</P>

<P>Knowing how to program is essential to creating a video game.  If you do not know how to program yet forget about making games for a few months and concentrate on learning to program.  In a few months you will not have mastered C++ but you should be able to function with it and understand it enough to read the examples you are going to need to figure out game programming.</P>

<P>What platform should I learn on?</P>

</B><P>You want to learn on the Windows 95/98 platform.  Why?  Because it has more than 90% of the market share for personal computers.  That's where the people are, that's where the money is.</P>

<P>How do I learn how to program?</P>

<P>There are courses on this at independent technical schools and colleges, but you can just pick up a book as well.  In fact you are going to need one to at least one for a reference when you program.  You will probably end up buying several books, here's some suggestions on topics that you will want:</P>

<UL>
<LI>C++</LI>
<LI>Windows API's</LI>
<LI>DirectX</LI>
<LI>Game Programming</LI>
<LI>Math</LI>
</UL>

<P>The C++ book will be about straight C++, that you can use anywhere.  You want this.  You want to know how to REALLY program because in a couple of years the current Windows API could be totally replaced with something else and if you don’t know the basics you won't be able to make the transition.  Also, the more you know about C++ the better you will be able to debug your code, and your going to spend what seems like millennia's on this.</P>

<P>The Window's API (Application Programming Interface) book does not have to focus on MFC (Microsoft Foundation Classes).  In fact, it's best if it does not even talk about it at all because you will not need it.  MFC classes are slow and large, the exact opposite of what your game will require to work.</P>

<P>DirectX is the current API for accessing graphics, sound, networking and 3D hardware on Windows 95 machines.  You will need a book as a reference and to give you examples.  Microsoft provides source code examples but they are not always easy to read or understand.  A book of the subject should detail what each line of code is doing and how you can use it for your own project.  If you find a book that is talking about writing something specifically for the book's project, such as a class for DirectX do not buy it.  These are confusing and they don’t explain DirectX like your going to need it explained.</P>

<P>Game programming books should show you the basics of how to write a computer game.  It will go into the simplest elements of what a video game does.  If you can get one that talks about more than one type of game, since these games are simple a wider range will help you more in the beginning then a lot of details about one specific kind of game.</P>

<P>Math is absolutely crucial to creating video games, the comment "I have never seen a piece of math that couldn't be applied to video games" is completely true.  You need to know basic algebraic equations by heart and you should own a copy of a Geometry and Trigonometry book as well.  For 3D graphics you will need to learn a lot about linear algebra.</P>

<P>Your best bet is NOT to create a 3D game for your first piece.  It's a lot more than you need to worry about all at once.  Work in small steps and you'll eventually get there, try to make a leap across the Grand Canyon and your not going to make it.  There's a reason that 3D games have hundreds of thousands to million dollar budgets.</P>

<P>Do I work alone or with others?</P>

<P>This is really about personal preference.  Do you work well with others?  Do you want to share the burden and responsibility?  Can you manage others?  Do you want someone managing you?</P>

<P>My advice to you in the beginning is to work by yourself.  At least become a competent programmer and create a few small games on your own.  Draw the art yourself in a freeware paint program or Paint Shop Pro by Jasc which is shareware.  It's ok that it looks bad, the point is that your gaining experience, and this will help you enormously when you raise your standards for your next project.  There are also free or very cheap sprite collections such as SpriteLib available on the Internet for you to use as well.  These can save you a lot of time since you are just trying to learn and create something simple.  The graphics are probably better than you can draw if you draw as well as most programmers.</P>

<P>When you decide you need a real artist then try to get someone who is close to you so that you can work together.  Working over a distance takes more work and a good ability to communicate.  You may think this won't be a problem but if you try it you may find out you can not communicate your needs and can not get what you need to done.</P>

<P>If you are thinking about starting your own "group" or team, be careful whom you select to work with.  Managing people is difficult and time consuming, many new comers say they want to make a game and then will never do anything, if you are being pulled down by people like this because their part of the bargain is not being done it can ruin your project.</P>

<P>What do I create?</P>

<P>First thing you need to think about is what kind of game you want to make.  Is it going to be a driving game?  A shoot-em up?  Beat-em up?  Level jumping game?</P>

<P>Try to pick something that you think you can accomplish and you would like to play.  That way when you get stuck, and you will, you have more incentive to keep going and finish it.  If you pick something you're not really interested in you will have a lot of trouble with motivation.</P>

<P>The very first game you make you want it to be so simple you can't fail to finish it.  Many people write remakes of Breakout, Tetris or PacMan.  You want to finish your first game.  It's crucial that you do, don’t move on until you have your first game completely finished.</P>

<P>This can become a pattern for you if you are not careful, you don't finish one thing and then move on to the next "bigger, better" thing.  A lot of game programming is the ability to stick to it.  The statistic that I have heard is that 1 in every 50 games gets completed.  You don’t want to be part of the 49 people who do not complete their game.</P>

<P>A lot of people want to start out with a role playing game (RPG). This is not a good idea and I'll explain why.  RPG's are not necessarily more difficult to program than any other kind of game, but they are incredibly detailed.  It could take you months just to create all the basic items and combat systems.  If you start with a simpler type of game you can learn how to do the graphics, and the interface and controls and not have to worry about a lot of game internals.  It will take you a lot less time to create than an RPG, after you have finished a small project like this <I>then</I> you can start creating your RPG.  With the knowledge you gained from your first game it will be a lot easier and move a lot smoother and you'll be a lot more likely to finish.</P>

<P>How do I create it?</P>

<P>Your game should be well planned out.  You should try to think it through from the first screen to the end and every action the player or the computer will make in between.  The reason to be so detailed about it is that if you don't know what you're really creating it can take a really long time to make it.  You will keep changing ideas, or adding on things and different pieces of your program may not work together correctly.</P>

<P>The Design Document</P>

<P>This is where the design document comes in to play.  The design document is what every game developer uses to create his game.  In it will detail everything that will go on, from start to finish, in the minutest detail.  I recently overhead someone say, "A design document should be detailed enough that two different groups of people could read it and produce basically the same game."</P>

<P>If you think about how different people's interpretations of <I>anything</I> is you can see the truly vast significance of the design document.  It <I>is</I> the game.</P>

<P>What is in the design document?</P>

<P>The design document should be broken up in to several categories, with sub-categories.</P>

<P>Here is an example list.</P>

<BLOCKQUOTE>
<FONT COLOR=RED>
<OL TYPE="I">


I. General Description</OL>

<OL>

<LI>Backstory</LI>
<LI>Introduction to the Game</LI>
<LI>Cast of Characters</LI>
<LI>Feature List</LI>
<LI>Definitions and Descriptions</LI>
<LI>Introduction Sequence</LI>
<LI>Game Selection Sequence</LI>
<LI>Game Start Screen</LI>
<LI>Game Play</LI>
<LI>Game Levels</LI>
<LI>Milestones in Game</LI>
<LI>End of Game</LI>
<LI>Game Exit</LI></OL>

<OL TYPE="I">

II. Screen Description and User Interface Specification</OL>

<OL>

<LI>Introduction Sequence or Movie Before the Game</LI>
<LI>Game Selection Screen</LI>
<LI>Branch off screen for options before the game starts</LI>
<LI>Game Screen</LI>
<LI>Flowcharts of Screens</LI>
<LI>Controls</LI></OL>

<OL TYPE="I">

III. Art Specification</OL>

<OL>

<LI>Colors and Resolution Modes</LI>
<LI>Masking Color</LI>
<LI>Naming Conventions and File Types</LI>
<LI>Background Art List</LI>
<LI>Foreground Art List</LI>
<LI>Character Art List</LI></OL>

<OL TYPE="I">

IV. Sound and Music Specification</OL>

<OL>

<LI>Sound Effects List</LI>
<LI>Voice Talent List</LI>
<LI>Music List and Description of</LI></OL>

<OL TYPE="I">

V. Paradigm Specification (How things are done)</OL>

<OL>

<LI>How is the project going to be completed, who is going to do it?</LI>
<LI>What are the milestones for the game to be completed?</LI>
<LI>What functions and procedures are needed?</LI>
<LI>What information do we need on our characters?</LI>
<LI>How is the screen drawn?</LI>
<LI>How many frames per second are needed?</LI>
<LI>What libraries are needed to complete the game?</LI>
<LI>Flowchart of the game from beginning to end</LI></OL>

<OL TYPE="I">

VI. Artificial Intelligence Specification</OL>

<OL>

<LI>What do the characters need to know?</LI>
<LI>What will the characters do that someone could not do in real life?</LI>
<LI>Is everything fair?</LI></OL>

<OL TYPE="I">

VII. Legal Stuff</OL>

<OL>

<LI>Copyright notices</LI>
<LI>Non-disclosure agreements</LI></OL>

</OL>
</FONT>
</BLOCKQUOTE>

<P>As you can see here, this is an incredibly long list and it's just a list.  When you fill in all those topics with extremely detailed information about your game its going to get very large.  For large projects it's normal for design documents to be 100 pages and more.</P>

<B><P>When do I need to stop writing?</P>

</B><P>There comes a time when you have to stop writing and produce.  This is a necessary balance and it's actually dangerous to write too much.  You can burn yourself out and quit the project just from frustration.  </P>

<P>Writing a design document is very difficult but it is also very rewarding.  Your ideas will solidify as you write your document, you are forced to ask yourself, "How am I going to do this?"  This is <I>so</I> important for creating your game, it will give you a true direction.</P>

<P>Spend a couple of days writing it at the least, this should be enough time for you to fill in the basics and expand a good deal on the beginning topics.  Your design document is going to change and be wrong, this always happens when you turn concepts into reality, just go back and change your design document when you change the way your doing things.  This always keeps you on track.</P>

<P>I'm just doing a small game do I still need a design document?</P>

<P>Yes, you do.  First of all, you need the practice and it will still help you in your programming.  Secondly it’s a small game so the design document will be smaller; it won't take you that long to create or update it so just stick with it.</P>

<P>I started working on my game, but now I'm stuck.</P>

<P>This is going to happen, even after you gain experience you are going to run in to roadblocks that you just can't seem to get over.  Fortunately in this connected age you can go to places on the Internet and get help.  </P>

<P>There are a lot of sites up that have tutorials in every subject you can think of, go to your search engine and search on the topic your having a problem with.  If you can't find it just search on "games programming" and then look through the sites that come up.</P>

<P>If and only if you can't find a tutorial on something that helps you fix the problem you should go and ask on newsgroups.  Before you post to a newsgroup read from it for a few days first.  See the way people act and post on it so that you don’t make a mistake that people yell at you for.</P>

<P>The long time rec.games.programmer newsgroup has recently been split into a comp.games.development.* series of groups.</P>

<P>You need to choose the appropriate group to post in before you start asking questions, if your question is about programming in DirectX do not ask in the design group, or the art group.  Do not post more than one message in more than one newsgroup.  If no one responds to your message re-post it in two days, not less.</P>

<H3><FONT COLOR=YELLOW><I>What to do after you make your game?</FONT></I></H3>

<P>After you create your game you have to decide how to distribute it.  After all, you don’t want to be the only one who plays it right?</P>

<P>Luckily there are many ways to do this.  As I spoke of earlier you can try to get a publisher or distributor and put it in stores.  This will depend a lot on the quality of your game.  It has to be comparable to other games that are also in stores.</P>

<P>One alternative to this is to go with a value software publisher or through a regular publisher in their value line.  Several value publishers are Expert and MVP, you have likely seen their software in all types of stores in racks by themselves and they at times get placed with other games as well with just a reduced price.</P>

<P>You can also take your game the shareware route.  Even with this there are many alternative ways to distribute it.  There are CD packs that contain hundreds of games and you could get your game put on there and people may send you money if they like it.  There are also several hundred sites on the Internet that have download sections for games such as download.com.</P>

<P>If you decide you want to sell it yourself there are places that will do the credit card transactions for a fee with every transfer.  Its usually about $5, but if you sell your game for over $15 it can definitely be worth it.</P>

<P>Even better than that a lot of providers have site hosting that has credit card set ups as a built in service with shopping cart CGI scripts as well.  This basically handles all of the transactions for you all you will need to do is set up your bank account with the company.</P>

<P>How to contact publishers?</P>

<P>Publishers will generally have links of their site that so you can email them about your game.  Never just send them your game, they will just delete it so that you can't sue them.  Before any game company will ever look at your game you will have to sign a Non-Disclosure Agreement (NDA) which will protect them, and if they have written it fairly it will protect you as well.</P>

<P>NDA's are standard procedure and you can not get around this.  If you don't see an NDA with instruct on their site with procedures of what to do email them and ask them.  Some publishers do not accept 3<SUP>rd</SUP> party submissions and some only want games for consoles so you will have to ask around to find out if they are looking for something like your game.</P>

<P>A safe bet is to just ask them if they are looking for games of your genre and platform type.  A yes or no answer is a good start.</P>

<P>How do you protect yourself and your game?</P>

<P>Protecting your work is important, you put a lot of time in to it and you don’t want to lose any of it to someone who would steal it.</P>

<P>Anything you write is protected by the Copyright laws, but you still have to prove you wrote it first right?</P>

<P>First thing you should do is put a Copyright symbol next to your work with a message saying that you own this and it is your property.  This just shows people that you know you have a right over it.</P>

<P>You also need to send in a copy of your material to the Copyright office.  If you don't a lawyer will not even touch your case.  You can find out more information by going to the US Copyright Office homepage at:</P>

<P>http://lcweb.loc.gov/copyright/</P>

<P>Trademarks</P>

<P>Trademarks cost money, but they are the best way to make sure you have all the rights to your game, starting with the name.  The last time I checked I believe the price was $250 approximately to get a Trademark and $500 for a lawyer to do a search for you to find out if anyone else already has it.</P>

<P>If you don’t have the money for this you can use what is called a Service mark.  Instead of a small TM next to your game's name you would put a SM.  Service mark's give you the same protection of a Trademark but they are not yet registered so there is still some risk to it.  Signing a service mark to your game's name is basically saying that you intend to trademark that name within a given period of time.  It is from 2-5 years, I forget how long precisely but it will at least give you enough time to get your game out the door safely.</P>

<P>Agents</P>

<P>Yes there are really agents for computer game developers now.  These people usually get their money from the publishing companies for finding talent.  Since your not the one paying them they don’t really work for you, it is still in their best interest to get you to a publisher though.</P>

<P>Just like dealing with anyone about your game though you will want to be cautious.  Until you have a signed deal or a signed NDA your ideas can be taken.</P>

<P>My advice is to be only somewhat paranoid about your game's idea.  Obviously you don’t want to give away your secrets that will make your game the best, so just describe your game in terms of other peoples games until you get an NDA signed.</P>

<P>This is also usually clearer as well.  For instance you could say, I'm doing a game that’s like a mix between SimCity and Links Golf, you have to design golf courses for the rich and famous.  They can use their imagination. </P>

<H3><FONT COLOR=YELLOW><I>Conclusion</I></FONT></H3>

<P>In conclusion I wish everyone who really wants to create games good luck and a reminder that if you work hard enough at anything you can get there, especially if you are capable of taking small steps.</P>

<!--Bottom Navigation-->
<A NAME="bottom"></A>
<!--End Bottom Navigation-->
</STRONG>
</FONT>
<!--End Body-->
<!--Bottom-->
<BR>
<IMG SRC="gradbar.jpg">
<BR>
<FONT SIZE=2 COLOR=#8B8B8B FACE=Helvetica>
<I><font color="#FBFBFB">T</font><font color="#F7F7F7">h</font><font color="#F3F3F3">e</font><font color="#EFEFEF"> </font><font color="#EBEBEB">G</font><font color="#E7E7E7">a</font><font color="#E3E3E3">m</font><font color="#DFDFDF">e</font><font color="#DBDBDB"> </font><font color="#D7D7D7">P</font><font color="#D3D3D3">r</font><font color="#CFCFCF">o</font><font color="#CBCBCB">g</font><font color="#C7C7C7">r</font><font color="#C3C3C3">a</font><font color="#BFBFBF">m</font><font color="#BBBBBB">m</font><font color="#B7B7B7">i</font><font color="#B3B3B3">n</font><font color="#AFAFAF">g</font><font color="#ABABAB"> </font><font color="#A7A7A7">M</font><font color="#A3A3A3">e</font><font color="#9F9F9F">g</font><font color="#9B9B9B">a</font><font color="#979797">S</font><font color="#939393">i</font><font color="#8F8F8F">t</font><font color="#8B8B8B">e</font> - ©1996-<SCRIPT LANGUAGE="JavaScript">
<!--
myDate = new Date;
if(myDate.getYear() < 100)
{
	printdate = (myDate.getYear() + 1900);
	document.write(printdate);
}
else
{
	printdate = myDate.getYear();
	document.write(printdate);
}
//-->
</SCRIPT> <A HREF="mailto:GPMega@perplexed.com" TARGET="CONTENT">Matt Reiferson</A>.
</I>
</FONT>
<!--End Bottom-->
<!--Footer-->
</BODY>
</HTML>
<!--End Footer-->















































